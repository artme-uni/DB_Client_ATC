<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>

<entry key="1. Перечень абонентов">SELECT
    TELEPHONE_EXCHANGE_ID,
    CALLER_ID,
    SECOND_NAME,
    FIRST_NAME,
    MIDDLE_NAME,
    IS_DEADHEAD,
    AGE
FROM
    "18204_KORCHASHKINA".CALLERS CA
    JOIN "18204_KORCHASHKINA".CLIENTS CL USING (CLIENT_ID)
    JOIN "18204_KORCHASHKINA".CLIENTS_AGES CLA USING (CLIENT_ID)
    JOIN "18204_KORCHASHKINA".TELEPHONE_EXCHANGES TE USING (TELEPHONE_EXCHANGE_ID)
WHERE
    TELEPHONE_EXCHANGE_ID = :exchange_id AND
    (CL.IS_DEADHEAD = :is_deadhead) AND
    (CLA.AGE >= :lower_age) AND
    (CLA.AGE &lt;= :upper_age) AND
    (SECOND_NAME IN (:second_name))
ORDER BY
    CALLER_ID</entry>


<entry key="2. Перечень свободных телефонных номеров">SELECT
    PHONE_NUMBER_ID,
    PHONE_NUMBER,
    TELEPHONE_EXCHANGE_ID,
    ADDRESS_ID
FROM
    "18204_KORCHASHKINA".FREE_PHONES_POSSIBILITIES
WHERE
    TELEPHONE_EXCHANGE_ID = :exchange_id AND
    ADDRESS_ID = :addr_id
ORDER BY
    PHONE_NUMBER_ID</entry>


<entry key="3. Перечень должников">SELECT
    TELEPHONE_EXCHANGE_ID,
    CALLER_ID,
    REGION,
    IS_BLOCKED,
    SECOND_NAME, FIRST_NAME, MIDDLE_NAME,
    SUBSCRIPTION_DEBT,
    LD_CALLS_DEBT,
    SUBSCRIPTION_DEBT_AGE,
    LONG_DISTANCE_DEBT_AGE
FROM
    "18204_KORCHASHKINA".DEBTORS_INFO
    LEFT JOIN "18204_KORCHASHKINA".CALLER_ADDRESSES CADRR USING (CALLER_ID)
WHERE
    (TELEPHONE_EXCHANGE_ID = :exchange_id) AND
    (REGION IN (:region)) AND
    ("18204_KORCHASHKINA".GET_SUBSCRIPTION_DEBT_AGE(CALLER_ID) >= :subscription_debt_age_min_age) AND
    ("18204_KORCHASHKINA".GET_LONG_DISTANCE_DEBT_AGE(CALLER_ID) >= :long_distance_debt_min_age) AND
    (LD_CALLS_DEBT >= :min_long_distance_debt) AND
    (SUBSCRIPTION_DEBT >= :min_subscription_debt)
ORDER BY
    CALLER_ID</entry>


<entry key="4.1 АТС с наибольшим числом должников">
WITH DEBTORS_COUNT AS (
    SELECT TELEPHONE_EXCHANGE_ID,
    "18204_KORCHASHKINA".GET_DEBTOR_COUNT(TELEPHONE_EXCHANGE_ID) AS DEBTOR_COUNT
    FROM "18204_KORCHASHKINA".TELEPHONE_EXCHANGES)

SELECT
    TELEPHONE_EXCHANGE_ID,
    EXCHANGE_TYPE,
    DEBTOR_COUNT
FROM
    DEBTORS_COUNT JOIN
    "18204_KORCHASHKINA".EXCHANGE_TYPE USING (TELEPHONE_EXCHANGE_ID)
WHERE
    DEBTOR_COUNT = (SELECT MAX(DEBTOR_COUNT) FROM DEBTORS_COUNT) AND
    (EXCHANGE_TYPE = :exchange_type)
ORDER BY
    TELEPHONE_EXCHANGE_ID</entry>


<entry key="4.2 АТС с наибольшей суммой задолжности">
WITH MAX_DEBTS AS (
    SELECT TELEPHONE_EXCHANGE_ID,
    "18204_KORCHASHKINA".GET_MAX_DEBT(TELEPHONE_EXCHANGE_ID) AS MAX_DEBT
    FROM "18204_KORCHASHKINA".TELEPHONE_EXCHANGES)

SELECT
    TELEPHONE_EXCHANGE_ID,
    EXCHANGE_TYPE,
    COALESCE(MAX_DEBT, 0) AS DEBT
FROM
    MAX_DEBTS JOIN
    "18204_KORCHASHKINA".EXCHANGE_TYPE USING (TELEPHONE_EXCHANGE_ID)
WHERE
    COALESCE(MAX_DEBT, 0) = (SELECT MAX(COALESCE(MAX_DEBT, 0)) FROM MAX_DEBTS)
    AND (EXCHANGE_TYPE = :exchange_type)
ORDER BY
    TELEPHONE_EXCHANGE_ID</entry>


<entry key="5. Перечень общественных телефонов">
SELECT
    PUBLIC_PHONE_ID,
    TELEPHONE_EXCHANGE_ID,
    CITY,
    REGION,
    STREET,
    BUILDING_NUMBER
FROM
    "18204_KORCHASHKINA".PUBLIC_PHONES
    JOIN "18204_KORCHASHKINA".ADDRESS ADDR USING (ADDRESS_ID)
WHERE
    TELEPHONE_EXCHANGE_ID = :exchange_id AND
    REGION = :region
ORDER BY
    PUBLIC_PHONE_ID</entry>


<entry key="6. Процентное соотношение льготников">
WITH CLIENT_SELECTION AS(
    SELECT
        DISTINCT
        CALLER_ID,
        IS_DEADHEAD
    FROM
        "18204_KORCHASHKINA".CLIENTS CL
        JOIN "18204_KORCHASHKINA".CALLERS CA USING (CLIENT_ID)
        JOIN "18204_KORCHASHKINA".CALLER_ADDRESSES CADDR USING (CALLER_ID)
        JOIN "18204_KORCHASHKINA".EXCHANGE_TYPE ET USING (TELEPHONE_EXCHANGE_ID)
    WHERE
        TELEPHONE_EXCHANGE_ID = :exchange_id AND
        CADDR.REGION = :region AND
        EXCHANGE_TYPE = :exchange_type
),
CLIENT_COUNT AS (
    SELECT
        COUNT(*) AS COUNT
    FROM
        "18204_KORCHASHKINA".CLIENT_SELECTION
),
DEADHEAD_COUNT AS(
    SELECT
        COUNT(*) AS COUNT
    FROM
        "18204_KORCHASHKINA".CLIENT_SELECTION
    WHERE
        IS_DEADHEAD = 1
)

SELECT
    CASE
        WHEN CC.COUNT = 0 THEN 0
        ELSE ROUND((DC.COUNT / CC.COUNT) * 100, 0)
    END as DEADHEAD_PERCENTAGE,
    CASE
        WHEN CC.COUNT = 0 THEN 0
        ELSE ROUND(((CC.COUNT - DC.COUNT) / CC.COUNT) * 100, 0)
    END as NOT_DEADHEAD_PERCENTAGE
FROM
    DEADHEAD_COUNT DC
    CROSS JOIN CLIENT_COUNT CC</entry>

<entry key="7. Перечень абонентов, имеющих параллельные телефоны">
SELECT
    DISTINCT
    CALLER_ID,
    SECOND_NAME, FIRST_NAME, MIDDLE_NAME,
    TELEPHONE_EXCHANGE_ID,
    EXCHANGE_TYPE,
    IS_DEADHEAD,
    REGION
FROM
    "18204_KORCHASHKINA".CALLERS CA
    JOIN "18204_KORCHASHKINA".PHONES USING (CALLER_ID)
    JOIN "18204_KORCHASHKINA".PHONE_TYPES USING (PHONE_TYPE_ID)
    JOIN "18204_KORCHASHKINA".CLIENTS CL USING (CLIENT_ID)
    JOIN "18204_KORCHASHKINA".CALLER_ADDRESSES USING (CALLER_ID)
    JOIN "18204_KORCHASHKINA".EXCHANGE_TYPE USING (TELEPHONE_EXCHANGE_ID)
WHERE
    TYPE_NAME = 'Параллельный' AND
    TELEPHONE_EXCHANGE_ID = :exchange_id AND
    CL.IS_DEADHEAD = :is_deadhead AND
    REGION = :region AND
    EXCHANGE_TYPE = :exchange_type
ORDER BY
    CALLER_ID
</entry>

<entry key="8. Перечень телефонов">
SELECT
    PHONE_ID,
    ADDRESS_ID,
    CITY,
    REGION,
    STREET,
    BUILDING_NUMBER,
    IS_BLOCKED
FROM
    "18204_KORCHASHKINA".PHONES P
    JOIN "18204_KORCHASHKINA".ADDRESS ADDR USING (ADDRESS_ID)
    JOIN "18204_KORCHASHKINA".CALLERS CA on P.CALLER_ID = CA.CALLER_ID
WHERE
    ADDRESS_ID = :address_id AND
    STREET = :street AND
    IS_BLOCKED = :is_blocked
ORDER BY
    PHONE_ID
</entry>

<entry key="9. Город, с наибольшим количеством междугородных переговоров">
WITH
    OUTGOING_CALLS AS(
        SELECT
        LONG_DISTANCE_CALL_ID,
        SOURCE_PHONE_ID,
        ADDRESS_ID,
        CITY
    FROM
        "18204_KORCHASHKINA".LONG_DISTANCE_CALLS CALLS
        JOIN "18204_KORCHASHKINA".PHONES P ON (CALLS.SOURCE_PHONE_ID = P.PHONE_ID)
        JOIN "18204_KORCHASHKINA".ADDRESS ADDR USING (ADDRESS_ID)),

OUTGOING_CALLS_COUNT AS(
    SELECT
        CITY,
        COUNT(*) AS OUTGOING_CALLS_COUNT
    FROM
        OUTGOING_CALLS
        GROUP BY
        CITY),

INCOMING_CALLS AS(
    SELECT
        LONG_DISTANCE_CALL_ID,
        DESTINATION_PHONE_ID,
        ADDRESS_ID,
        CITY
    FROM
        "18204_KORCHASHKINA".LONG_DISTANCE_CALLS CALLS
        JOIN "18204_KORCHASHKINA".PHONES P ON (CALLS.DESTINATION_PHONE_ID = P.PHONE_ID)
        JOIN "18204_KORCHASHKINA".ADDRESS ADDR USING (ADDRESS_ID)),

INCOMING_CALLS_COUNT AS(
    SELECT
        CITY,
        COUNT(*) AS INCOMING_CALLS_COUNT
    FROM
        INCOMING_CALLS
        GROUP BY
        CITY),

CALLS_COUNT AS(
    SELECT
        CITY,
        INCOMING_CALLS_COUNT + OUTGOING_CALLS_COUNT AS COUNT
    FROM
        OUTGOING_CALLS_COUNT JOIN INCOMING_CALLS_COUNT USING (CITY))

SELECT
    CITY,
    COUNT AS CALLS_COUNT
FROM
    CALLS_COUNT
WHERE
    COUNT = (SELECT MAX(COUNT) FROM CALLS_COUNT)

</entry>

<entry key="10. Информация об абонентах">
SELECT
    PHONE_NUMBER_ID,
    TYPE_NAME,
    SECOND_NAME,
    FIRST_NAME,
    MIDDLE_NAME,
    AGE
FROM
    "18204_KORCHASHKINA".PHONE_NUMBERS PN
    JOIN "18204_KORCHASHKINA".PHONES P USING (PHONE_NUMBER_ID)
    JOIN "18204_KORCHASHKINA".PHONE_TYPES PT USING (PHONE_TYPE_ID)
    JOIN "18204_KORCHASHKINA".CALLERS CA USING (CALLER_ID)
    JOIN "18204_KORCHASHKINA".CLIENTS C3 USING (CLIENT_ID)
    JOIN "18204_KORCHASHKINA".CLIENTS_AGES CA USING (CLIENT_ID)
WHERE
    PHONE_NUMBER_ID = :phone_number_id
ORDER BY
    PHONE_NUMBER_ID
</entry>

<entry key="11. Cпаренные телефоны с возможностью их замены на обычные">
SELECT
    DISTINCT
    P.PHONE_NUMBER_ID,
    PN.PHONE_NUMBER,
    CALLER_ID,
    PN.TELEPHONE_EXCHANGE_ID,
    P.ADDRESS_ID
FROM
    "18204_KORCHASHKINA".PHONES P
    JOIN "18204_KORCHASHKINA".PHONE_TYPES PT USING (PHONE_TYPE_ID)
    JOIN "18204_KORCHASHKINA".PHONE_NUMBERS PN on PN.PHONE_NUMBER_ID = P.PHONE_NUMBER_ID
    JOIN "18204_KORCHASHKINA".FREE_PHONES_POSSIBILITIES FREE_PH ON (P.ADDRESS_ID = FREE_PH.ADDRESS_ID
    AND PN.TELEPHONE_EXCHANGE_ID = FREE_PH.TELEPHONE_EXCHANGE_ID)
WHERE
    TYPE_NAME = 'Спаренный'
</entry>

<entry key="12. Получить перечень мало активных телефонов">
WITH FILTERED_CALLS AS (
    SELECT
        TELEPHONE_EXCHANGE_ID,
        LONG_DISTANCE_CALL_ID,
        SOURCE_PHONE_ID,
        PHONE_NUMBER,
        START_DATE
    FROM
        "18204_KORCHASHKINA".LONG_DISTANCE_CALLS CALLS
        JOIN "18204_KORCHASHKINA".PHONES P ON CALLS.SOURCE_PHONE_ID = P.PHONE_ID
        JOIN "18204_KORCHASHKINA".PHONE_NUMBERS PN USING (PHONE_NUMBER_ID)
    WHERE
        TELEPHONE_EXCHANGE_ID = :exchange_id AND
        START_DATE > :start_date AND
        START_DATE &lt; :end_date
),
CALLS_COUNT AS(
    SELECT
        TELEPHONE_EXCHANGE_ID,
        SOURCE_PHONE_ID,
        PHONE_NUMBER,
        COUNT(*) AS CALLS_COUNT
    FROM
        FILTERED_CALLS
    GROUP BY
        SOURCE_PHONE_ID, PHONE_NUMBER, TELEPHONE_EXCHANGE_ID
)

SELECT
    TELEPHONE_EXCHANGE_ID,
    SOURCE_PHONE_ID,
    PHONE_NUMBER,
    CALLS_COUNT
FROM
    CALLS_COUNT
WHERE
    CALLS_COUNT &lt;= :max_calls_count
ORDER BY
    SOURCE_PHONE_ID
</entry>

<entry key="13.1 Перечень должников для отключения">
SELECT
    DISTINCT
    TELEPHONE_EXCHANGE_ID,
    CALLER_ID,
    SECOND_NAME,
    FIRST_NAME,
    MIDDLE_NAME,
    SUBSCRIPTION_DEBT_AGE,
    LONG_DISTANCE_DEBT_AGE
FROM
    "18204_KORCHASHKINA".DEBTORS_INFO JOIN "18204_KORCHASHKINA".CALLER_ADDRESSES USING (CALLER_ID)
WHERE
    IS_BLOCKED = 0 AND
    (LONG_DISTANCE_DEBT_AGE > 2 OR (SUBSCRIPTION_DEBT_AGE > 2)) AND
    TELEPHONE_EXCHANGE_ID = :exchange_id AND
    REGION = :region
</entry>

<entry key="13.2 Перечень должников для уведомления об отключении">
SELECT
    DISTINCT
    TELEPHONE_EXCHANGE_ID,
    CALLER_ID,
    SECOND_NAME,
    FIRST_NAME,
    MIDDLE_NAME,
    SUBSCRIPTION_DEBT_AGE,
    LONG_DISTANCE_DEBT_AGE
FROM
    "18204_KORCHASHKINA".DEBTORS_INFO JOIN "18204_KORCHASHKINA".CALLER_ADDRESSES USING (CALLER_ID)
WHERE
    IS_BLOCKED = 0 AND
    ((SUBSCRIPTION_DEBT_AGE >= 0 AND SUBSCRIPTION_DEBT_AGE &lt;= 2)
    OR (LONG_DISTANCE_DEBT_AGE >= 0 AND LONG_DISTANCE_DEBT_AGE &lt;= 2)) AND
    TELEPHONE_EXCHANGE_ID = :exchange_id AND
    REGION = :region
</entry>

</properties>